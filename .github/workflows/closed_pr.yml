on:
  workflow_call:
    inputs:
      course_id:
        required: true
        type: string
      available_assignments:
        required: true
        type: string
      student_id:
        required: true
        type: string

jobs:

  report-closed-pr-to-canvas:
    runs-on: ubuntu-latest
    steps:
      - name: Get last PR comment
        id: last_comment
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.READ_ORG_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const pr_number = context.payload.pull_request.number;
            const comments = await github.rest.issues.listComments({
              owner,
              repo,
              issue_number: pr_number,
              per_page: 1,
              sort: 'created',
              direction: 'desc'
            });
            if (comments.data.length > 0) {
              core.setOutput('last_comment_body', comments.data[0].body || '');
              core.setOutput('last_comment_user', comments.data[0].user.login);
              core.setOutput('last_comment_url', comments.data[0].html_url);
            } else {
              core.setOutput('last_comment_body', '');
            }

      - name: Create comment
        id: created_comment
        run: |
          cat << EOF >> $GITHUB_OUTPUT
          myoutput<<EOM
          Pull Request Action: ${{ github.event.action }}
          Status: Pull request was manually closed.
          Comment: ${{ steps.last_comment.outputs.last_comment_body }}

          User who closed: ${{ github.event.sender.login }}
          PR URL: ${{ github.event.pull_request.html_url }}
          EOM
          EOF

      - uses: bth-python/utils/.github/actions/get-assignment-id@dev
        id: resolve
        with:
          available_assignments: ${{ inputs.available_assignments }}

      - name: Update Canvas with closed PR
        uses: bth-python/utils/.github/actions/update-canvas@dev
        with:
          subcommand: "grade_submission"
          grade: "TUx"
          comment: "${{ steps.created_comment.outputs.myoutput }}"
          canvas_api_token: ${{ secrets.CANVAS_API_TOKEN }}
          course_id: ${{inputs.course_id}}
          assignment_id: ${{ steps.resolve.outputs.assignment }}
          student_id: ${{ inputs.student_id }}
          read_org_token: "${{ secrets.READ_ORG_TOKEN }}"
